{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Today I Learned...","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"회사 솔루션에서 백오피스 특성상, CSV 가져오기/내보내기를 구현할 일이 있었습니다. 사용자가 본인이 가진 기기의 MAC주소를 등록하는 화면이 있었는데 이때 UI에서는 한개씩만 등록할 수 있게 되어있었기 때문이죠. UI상에서 여러개를 등록할 수 있게 개선할 수도 있지만, 그보다는 엑셀형태(정확히는 CSV)로 관리하는 방식을 관리자들이 선호했기 때문에 대신…","fields":{"slug":"/atWork/modern-file-api/"},"frontmatter":{"date":"July 25, 2023","title":"프론트엔드에서 파일 입출력 다루기","category":"atWork","draft":false}}},{"node":{"excerpt":"마주친 문제 백오피스 개발을 하다보면 테이블 형태의 UI를 많이 쓰곤 합니다. 이때 컬럼(필드)의 종류가 많거나 아니면 단순히 한 필드의 내용 자체가 길어서 두줄로 넘어가거나, 보기 싫을 정도로 큰 비율을 차지하고 있는 경우가 있습니다.  위 그림에서 보듯, 의 내용이 각 행마다 4줄, 2줄, 1줄로 다르게 나오는 것이 통일감을 해치는 느낌이 있습니다. …","fields":{"slug":"/atWork/overflow-in-table/"},"frontmatter":{"date":"June 12, 2023","title":"테이블 셀 안의 내용이 너무 길 때","category":"atWork","draft":false}}},{"node":{"excerpt":"오늘은 저희가 유통하고 있는 F5 솔루션을 사용하고있는 고객사에서 한번 로그인 후에는 방문 시 자동으로 로그인이 되도록 해달라는 요청을 받았습니다. 여러 보안상의 문제가 우려되지만 우선 가능한 방법이 있다면 적용해주는 것으로 내부 결정이 되었습니다. F5 솔루션은 웹커스터마이징이라는 이름으로 자신들의 WebUI에 사용자 정의 스크립트를 붙일 수 있게 해줍…","fields":{"slug":"/atWork/wait-for-DOM/"},"frontmatter":{"date":"November 15, 2022","title":"특정 DOM이 나타난 이후에 작업하기","category":"atWork","draft":false}}},{"node":{"excerpt":"본 글은 지난 ‘비밀번호를 브라우저 메모리에서 숨기기 (1)‘에서 이어집니다. 지난 문제 요약 사용자가  태그에 비밀번호를 입력하고 나면, 크게 아래 두가지 행위에 의해 메모리에 남게 됩니다. 의  이벤트가 일어나는 경우 (즉, 를 잃는 경우) 자바스크립트 변수에 문자열을 저장하는 경우 두 가지 경우를 어떻게 해결해야 하는지 알아보기 위해 나름 보안이 중…","fields":{"slug":"/atWork/hide-pw-in-memory-2/"},"frontmatter":{"date":"November 07, 2022","title":"비밀번호를 브라우저 메모리에서 숨기기 (2)","category":"atWork","draft":false}}},{"node":{"excerpt":"※ 참고 저는 brave 브라우저를 사용하고 있어서, 작업관리자와 덤프 파일명에 라고 적혀있습니다만 chrome 브라우저를 사용해도 내용은 동일합니다. 문제의 시작 사내 솔루션의 보안 평가를 진행하던 중 지적 사항으로 사용자가 입력한 패스워드가 메모리에 평문으로 남는다는 지적이 있었습니다. 개인적으로는 아직도 잘 이해가 되지 않는 지적입니다. 백엔드 데이…","fields":{"slug":"/atWork/hide-pw-in-memory-1/"},"frontmatter":{"date":"November 06, 2022","title":"비밀번호를 브라우저 메모리에서 숨기기 (1)","category":"atWork","draft":false}}},{"node":{"excerpt":"TL;DR 오늘은 저희 회사의 보안 솔루션에 웹 취약점이 발견되어 고쳐보았습니다. 설치 진단은 무료 오픈소스 웹 취약점 스캐너인 arachni를 사용하였습니다. 참고로 현재(2022.10월) arachni 홈페이지를 방문해보면 “obsolescence”(노후화)되어가고 있다며 후계자인 Ecsypno SCNR를 사용해보라는 문구가 나오네요. arachni를…","fields":{"slug":"/atWork/web-security-with-arahcni/"},"frontmatter":{"date":"October 31, 2022","title":"Arachni로 웹 취약점 개선하기","category":"atWork","draft":false}}},{"node":{"excerpt":"오늘은 빌드 시에 발생하는 취약성 로그를 해결하라는 요청을 받았습니다. 저희 솔루션은  스크립트를 이용하여 빌드를 하는데, 이때 가 함께 들어가있습니다. 때문에 빌드를 하게 되면 호환이 깨지지 않는 범위내에서 최대한 취약성을 제거하고 빌드를 하게 되는데, 이 문구가 나오지 않도록 개발단계에서 미리 패키지들을 업데이트해달라는 뜻입니다. 또한 로 해결되지 않…","fields":{"slug":"/atWork/npm-audit-fix/"},"frontmatter":{"date":"May 24, 2022","title":"npm audit으로 취약점 제거하기","category":"atWork","draft":false}}},{"node":{"excerpt":"오늘도 보안기능확인서 신청을 위해 들어온 요구사항 중 하나를 해결하고 기록하였습니다. 원래의 요구사항은 사용자의 비밀번호가 어디에도 평문으로 남아서는 안된다는 지적이었으며, 구체적으로는 프론트엔드에서 로그인을 할 때 개발자도구를 열면 사용자가 입력한 암호가 보인다는 것이었습니다. 비밀번호를 해싱해서 보내는 해결방법도 있었지만, 개발자도구 특성상 어디에 언…","fields":{"slug":"/atWork/disable-devtool/"},"frontmatter":{"date":"May 13, 2022","title":"개발자도구 접근 차단하기","category":"atWork","draft":false}}}]}},"pageContext":{}}}